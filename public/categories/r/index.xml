<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on HCZ Blog</title>
    <link>https://hcz.neilify.app/categories/r/</link>
    <description>Recent content in R on HCZ Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hcz.neilify.app/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ggplot2 Learning</title>
      <link>https://hcz.neilify.app/post/ggplot2_learning/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hcz.neilify.app/post/ggplot2_learning/</guid>
      <description>一个简单的例子 library(ggplot2) ggplot(mpg, aes(displ, hwy))+ geom_point(aes(color = class))+ geom_smooth(se = FALSE)+ labs(title = paste(&amp;quot;Fuel efficiency generally decreases with engine size&amp;quot;)) library(ggplot2) library(dplyr) library(gapminder) data &amp;lt;- gapminder %&amp;gt;% filter(year==&amp;quot;2007&amp;quot;) %&amp;gt;% dplyr::select(-year) data %&amp;gt;% arrange(desc(pop)) %&amp;gt;% mutate(country = factor(country)) %&amp;gt;% ggplot(aes(x=gdpPercap, y=lifeExp, size = pop)) + geom_point(alpha=0.5) + scale_size(range = c(.1, 24), name=&amp;quot;Population (M)&amp;quot;) data %&amp;gt;% arrange(desc(pop)) %&amp;gt;% mutate(country = factor(country, country)) %&amp;gt;% ggplot(aes(x=gdpPercap, y=lifeExp, size=pop,</description>
    </item>
    
    <item>
      <title>Shiny Notes</title>
      <link>https://hcz.neilify.app/post/shinynotes/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hcz.neilify.app/post/shinynotes/</guid>
      <description>Chapter 1：一个简单的例子 library(shiny) ui &amp;lt;- fluidPage( selectInput(&amp;quot;dataset&amp;quot;, label = &amp;quot;Dataset&amp;quot;, choices = ls(&amp;quot;package:datasets&amp;quot;)), verbatimTextOutput(&amp;quot;summary&amp;quot;), tableOutput(&amp;quot;table&amp;quot;) ) server &amp;lt;- function(input, output, session) { output$summary &amp;lt;- renderPrint({ dataset &amp;lt;- get(input$dataset, &amp;quot;package:datasets&amp;quot;) summary(dataset) }) output$table &amp;lt;- renderTable({ dataset &amp;lt;- get(input$dataset, &amp;quot;package:datasets&amp;quot;) dataset }) } shinyApp(ui, server) Shiny app有两部分：用户交互脚本ui、服</description>
    </item>
    
  </channel>
</rss>
